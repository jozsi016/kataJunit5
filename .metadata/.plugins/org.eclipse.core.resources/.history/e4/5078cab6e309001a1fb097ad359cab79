package com.itron.Kata;

import static org.junit.jupiter.api.Assertions.*;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public class ClinicCalendarShould {

	ClinicCalendar calendar;
	
	@BeforeAll
	public static void testClassSetup() {
		System.out.println("Bedore all... ");
	}
	
	@BeforeEach
	public void init() {
		System.out.println("Before each...");
		calendar = new ClinicCalendar(LocalDate.of(2019,11,15));
	}
	
	@Test
	public void allowEntryOfAnApointment() {
		System.out.println("entry of apointmnet... ");
		calendar.addApointment("Jim", "Weaver", "avery", "09/01/2018 2:00 pm");
		List<PatientAppointment> appoinments = calendar.getAppointments();
		assertNotNull(appoinments);
		assertEquals(1, appoinments.size());
		PatientAppointment enterAppt = appoinments.get(0);
		assertEquals("Jims", enterAppt.getPatientFirstName());
		assertEquals("Weavers", enterAppt.getPatientLastName());
//		assertEquals(Doctor.avery, enterAppt.getDoctor());
//		assertSame(Doctor.avery, enterAppt.getDoctor());
//		assertNotSame(Doctor.johnson, enterAppt.getDoctor());
		assertEquals("9/1/2018 02:00 PM",
				enterAppt.getAppointmentDateTime().format(DateTimeFormatter.ofPattern("M/d/yyyy hh:mm a")));
	}

	@Test
	public void returnTrueForHasAppointmentsIfThereAreAppointments() {
		System.out.println("return true if there is appointment ");
		calendar.addApointment("Jim", "Weaver", "avery", "09/01/2018 2:00 pm");
		assertTrue(calendar.hasAppointment(LocalDate.of(2018, 9, 1)));
	}

	@Test
	public void returnFalseForHasAppointmentsIfthereAreNoAppoinments() {
		System.out.println("return true if there isn't appointment ");
		assertFalse(calendar.hasAppointment(LocalDate.of(2018, 9, 1)));
	}
	
	@Test
	public void returnCurrentDayAppointments() {
		System.out.println("current day appointments ");
		calendar.addApointment("Jim", "Weaver", "avery", "11/15/2019 2:00 am");
		calendar.addApointment("Jim", "Weaver", "avery", "11/15/2019 3:00 am");
		calendar.addApointment("Jim", "Weaver", "avery", "11/15/2019 4:00 am");
		assertEquals(calendar.getTodaydAppointments().size(), calendar.getAppointments().size());
		assertIterableEquals(calendar.getTodaydAppointments(),  calendar.getAppointments());
	}
	
	@AfterEach
	public void tearDownEachTest() {
		System.out.println("After each... ");
	}
	
	@AfterAll
	public static void testDownTestClass() {
		System.out.println("After all...");
	}
	
}
