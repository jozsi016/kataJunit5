package com.itron.Kata;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.stream.Collectors;

public class ClinicCalendar {

	private List<PatientAppointment> appointments;

	public ClinicCalendar() {
		this.appointments = new ArrayList<>();
	}

	public ClinicCalendar(LocalDate now) {
		this();
	}


	public void addApointment(String patientFirstName, String patientLastName, String doctorKey, String dateTime) {
		Doctor doc = Doctor.valueOf(doctorKey.toLowerCase());
		LocalDateTime localDateTime;
		try {
			localDateTime = LocalDateTime.parse(dateTime.toUpperCase(),
					DateTimeFormatter.ofPattern("M/d/yyyy h:m a", Locale.US));
		} catch (Exception e) {
			throw new RuntimeException("Unable to create date time from: [" + dateTime.toUpperCase()
					+ "], please enter with format [M/d/yyyy h:mm a] ");
		}
		PatientAppointment appointment = new PatientAppointment(patientFirstName, patientLastName, localDateTime, doc);
		appointments.add(appointment);
	}

	public List<PatientAppointment> getAppointments() {
		return appointments;
	}

	/*
	 * public List<PatientAppointment> getTodaydAppointments() { return
	 * appointments.stream() .filter(appt ->
	 * appt.getAppointmentDateTime().toLocalDate().equals(today))
	 * .collect(Collectors.toList()); }
	 */

	public boolean hasAppointment(LocalDate date) {
		return appointments.stream().anyMatch(appt -> appt.getAppointmentDateTime().toLocalDate().equals(date));
	}

}
